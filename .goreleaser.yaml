version: 2

project_name: chatlogger-api-go

before:
  hooks:
    - go mod tidy

builds:
  - id: server
    main: ./cmd/server
    binary: "{{ .ProjectName }}-server-{{ .Version }}_{{ .Os }}-{{ .Arch }}"
    ldflags: ['-s -w -X "github.com/kjanat/chatlogger-api-go/internal/version.Version={{.Version}}" -X "github.com/kjanat/chatlogger-api-go/internal/version.BuildTime={{.Date}}" -X "github.com/kjanat/chatlogger-api-go/internal/version.GitCommit={{.Commit}}"']
    goos: [linux, windows, darwin]
    goarch: [amd64, arm64]
    env: [CGO_ENABLED=0]

  - id: worker
    main: ./cmd/worker
    binary: "{{ .ProjectName }}-worker-{{ .Version }}_{{ .Os }}-{{ .Arch }}"
    ldflags: ['-s -w -X "github.com/kjanat/chatlogger-api-go/internal/version.Version={{.Version}}" -X "github.com/kjanat/chatlogger-api-go/internal/version.BuildTime={{.Date}}" -X "github.com/kjanat/chatlogger-api-go/internal/version.GitCommit={{.Commit}}"']
    goos: [linux, windows, darwin]
    goarch: [amd64, arm64]
    env: [CGO_ENABLED=0]

archives:
  - name_template: "{{ .ProjectName }}-{{ .Version }}_{{ .Os }}-{{ .Arch }}"
    files:
      - LICENSE
      - README.md
      - migrations/*
      - docs/OpenAPI_*

checksum:
  name_template: "{{ .ProjectName }}_checksums.txt"

signs:
  - artifacts: all
    cmd: cosign
    args:
      - sign-blob
      - --key=env://COSIGN_PRIVATE_KEY
      - --yes
      - --output-signature=${signature}
      - ${artifact}
    stdin: ""

# metadata:
#   mod_timestamp: "{{ .CommitTimestamp }}"
#   maintainers:
#     - "Kaj Kowalski <chatlogger-api-go@kjanat.com>"
#   license: "MIT"
#   homepage: "https://github.com/kjanat/chatlogger-api-go"
#   description: "{{ .Env.DESCRIPTION }}"

nfpms:
  - id: chatlogger-api-go
    package_name: "{{ .ProjectName }}"
    vendor: kjanat
    homepage: "{{ .Env.URL }}"
    maintainer: Kaj Kowalski <chatlogger-api-go@kjanat.com>
    description: "{{ .Env.DESCRIPTION }}"
    license: MIT
    formats:
      - deb
      - rpm
      - apk
    dependencies:
      - postgresql
    contents:
      - src: ./migrations/
        dst: /var/lib/chatlogger/migrations
        type: tree
      - src: ./scripts/systemd/chatlogger.service
        dst: /etc/systemd/system/chatlogger.service
        type: config
    scripts:
      postinstall: "./scripts/package/postinstall.sh"
      preremove: "./scripts/package/preremove.sh"

# kos:
#   - id: server
#     build: server
#     bare: false # may not work properly with --tags
#     preserve_import_paths: true
#     base_import_paths: false # may not work properly with --tags
#     repositories:
#       - ghcr.io/kjanat/chatlogger-api-server
#     tags:
#       - latest
#       - "{{.Tag}}"
#       - "v{{.Major}}"
#       - "v{{.Major}}.{{.Minor}}"
#       - "{{.Version}}"
#     # Labels for the image.
#     labels:
#       title: "{{ .ProjectName }}"
#       description: "{{ .Env.DESCRIPTION }}"
#       url: "https://github.com/users/kjanat/packages/container/package/chatlogger-api-server"
#       source: "{{ .Env.URL }}"
#       version: "{{ .Version }}"
#       created: "{{ .Date }}"
#       revision: "{{ .FullCommit }}"
#       licenses: "MIT"
#       vendor: "kjanat"
#     platforms:
#       - linux/amd64
#       - linux/arm64
#       - darwin/amd64
#       - darwin/arm64
#     ko_data_creation_time: "{{.CommitTimestamp}}"
#     env:
#       - GIN_MODE=release

#   - id: worker
#     build: worker
#     bare: false
#     preserve_import_paths: true
#     base_import_paths: false
#     repositories:
#       - ghcr.io/kjanat/chatlogger-api-worker
#     tags:
#       - latest
#       - "{{.Tag}}"
#       - "v{{.Major}}"
#       - "v{{.Major}}.{{.Minor}}"
#       - "{{.Version}}"
#     labels:
#       title: "{{ .ProjectName }}"
#       description: "{{ .Env.DESCRIPTION }}"
#       url: "https://github.com/users/kjanat/packages/container/package/chatlogger-api-worker"
#       source: "{{ .Env.URL }}"
#       version: "{{ .Version }}"
#       created: "{{ .Date }}"
#       revision: "{{ .FullCommit }}"
#       licenses: "MIT"
#       vendor: "kjanat"
#     platforms:
#       - linux/amd64
#       - linux/arm64
#       - darwin/amd64
#       - darwin/arm64
#     ko_data_creation_time: "{{.CommitTimestamp}}"
#     env:
#       - GIN_MODE=release

# docker_signs:
#   - artifacts: manifests
#     args:
#       - sign
#       - --key=env://COSIGN_PRIVATE_KEY
#       - --yes
#       - ${artifact}
#     stdin: ""
