name: Docker
description: Build and push Docker images
inputs:
  PACKAGE:
    required: true
    description: 'Package to build'
  IMAGE_PREFIX:
    required: true
    description: 'Prefix for the image name'
  PLATFORM:
    required: true
    description: 'Platform to build for (e.g. linux/amd64)'
  DOCKER_USERNAME:
    required: true
    description: 'Docker Hub username'
  DOCKER_PASSWORD:
    required: true
    description: 'Docker Hub password or token'
  GITHUB_TOKEN:
    required: true
    description: 'GitHub token for GHCR access'
outputs:
  digest:
    description: 'Image digest'
    value: ${{ steps.build.outputs.digest }}
  tags:
    description: 'Tags'
    value: ${{ steps.meta.outputs.tags }}
  labels:
    description: 'Labels'
    value: ${{ steps.meta.outputs.labels }}
  annotations:
    description: 'Annotations'
    value: ${{ steps.meta.outputs.labels }}
runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: kjanat
        password: ${{ inputs.DOCKER_PASSWORD }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: kjanat
        password: ${{ inputs.GITHUB_TOKEN }}

    - name: Install cosign
      uses: sigstore/cosign-installer@v3.8.2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract version components
      id: version
      uses: ./.github/actions/get_version
      with:
        version-file: internal/version/version.go

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          kjanat/chatlogger-api-${{ inputs.PACKAGE }}
          ghcr.io/kjanat/chatlogger-api-${{ inputs.PACKAGE }}
        labels: |
          org.opencontainers.image.created=${{ steps.version.outputs.build-date }}
          org.opencontainers.image.authors=kjanat
          org.opencontainers.image.url=https://github.com/${{ github.repository }}
          org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/tree/main/docs
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.version=${{ steps.version.outputs.version-no-v }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.vendor=kjanat
          org.opencontainers.image.ref.name=${{ github.ref_name }}
          org.opencontainers.image.title=chatlogger-api-${{ inputs.PACKAGE }}
          org.opencontainers.image.description='ChatLogger API ${{ inputs.PACKAGE }} service'
          org.opencontainers.image.licenses=${{ github.repository.license.spdx_id }}

    - name: Build and push by digest
      id: build
      uses: docker/build-push-action@v6
      env:
        GIN_MODE: release
        SOURCE_DATE_EPOCH: ${{ steps.version.outputs.timestamp }}
      with:
        context: .
        file: ./.github/actions/docker/Dockerfile.${{ inputs.PACKAGE }}
        platforms: ${{ inputs.PLATFORM }}
        sbom: true
        push: true
        provenance: mode=max
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha,scope=${{ inputs.PACKAGE }}
        cache-to: type=gha,scope=${{ inputs.PACKAGE }},mode=max
        build-args: |
          VERSION=${{ steps.version.outputs.version-no-v }}
          BUILD_TIME=${{ steps.version.outputs.build-date }}
          GIT_COMMIT=${{ github.sha }}
          GIT_TAG=${{ github.ref_name }}
          LD_FLAGS=-X github.com/kjanat/chatlogger-api-go/internal/version.Version=${{ steps.version.outputs.version-no-v }} -X github.com/kjanat/chatlogger-api-go/internal/version.BuildTime=${{ steps.version.outputs.build-date }} -X github.com/kjanat/chatlogger-api-go/internal/version.GitCommit=${{ github.sha }} -X github.com/kjanat/chatlogger-api-go/internal/version.GitTag=${{ github.ref_name }}
        outputs: |
          type=image,name=kjanat/chatlogger-api-${{ inputs.PACKAGE }},push-by-digest=true
          type=image,name=ghcr.io/kjanat/chatlogger-api-${{ inputs.PACKAGE }},push-by-digest=true
