# Build Stage
FROM --platform=$BUILDPLATFORM golang:1.24.2 AS builder

ARG TARGETOS
ARG TARGETARCH
ARG LD_FLAGS

LABEL org.opencontainers.image.source="https://github.com/kjanat/chatlogger-api-go"
LABEL org.opencontainers.image.description="ChatLogger API Server"
LABEL org.opencontainers.image.licenses="MIT"

WORKDIR /src

# Copy all files to ensure we have dependencies
COPY go.mod go.sum ./
COPY cmd/server ./cmd/server
COPY docs/ ./docs
COPY internal/ ./internal

# If 32-bit architecture, change the version of gorm.io/gorm to v1.25.12
RUN BIT=$(getconf LONG_BIT) && if [ "$BIT" = "32" ]; then \
echo "32-bit architecture detected ($BIT), changing gorm version to v1.25.12"; go mod edit -replace=gorm.io/gorm=gorm.io/gorm@v1.25.12; \
else echo "Not a 32-bit architecture ($BIT), using default gorm version"; fi

# Install dependencies
RUN go mod tidy

# Build the server binary for linux
RUN GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build \
-ldflags="${LD_FLAGS}" \
-o /out/server \
./cmd/server

# Final Stage
FROM alpine:3.21.3

WORKDIR /app
ENV GIN_MODE=release

# Create a non-root user and group
RUN addgroup -S chatlogger && adduser -S -G chatlogger chatlogger

COPY docs/ /app/docs
COPY --from=builder /out/server /usr/local/bin/chatlogger-server

# Ensure non-root user has appropriate permissions
RUN chown -R chatlogger:chatlogger /app && \
    chmod -R 755 /usr/local/bin/chatlogger-server

EXPOSE 8080

# Use non-root user for running the application
USER chatlogger

ENTRYPOINT [ "chatlogger-server" ]
