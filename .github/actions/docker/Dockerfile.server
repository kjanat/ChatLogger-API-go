# Build Stage
FROM --platform=$BUILDPLATFORM golang:1.24.2 AS builder

ARG TARGETOS
ARG TARGETARCH
ARG LD_FLAGS

WORKDIR /src

# Copy all files to ensure we have dependencies
COPY go.mod go.sum ./
COPY cmd/server ./cmd/server
COPY docs/ ./docs
COPY internal/ ./internal

# If 32-bit architecture, change the version of gorm.io/gorm to v1.25.12
RUN ARCH=$(uname -m) && \
if [ "$ARCH" = "i686" ] || [ "$ARCH" = "armv7l" ] || [ "$ARCH" = "armv6l" ]; then \
	echo "32-bit architecture detected ($ARCH), changing gorm version to v1.25.12"; \
	go mod edit -replace=gorm.io/gorm=gorm.io/gorm@v1.25.12; \
else \
	echo "Not a 32-bit architecture ($ARCH), using default gorm version"; \
fi

# Install dependencies
RUN go mod tidy

# Build the server binary for linux
RUN GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build \
-ldflags="${LD_FLAGS}" \
-o /out/server \
./cmd/server

# Final Stage
FROM alpine:3.21.3

WORKDIR /app
ENV GIN_MODE=release
COPY docs /app
COPY --from=builder /out/server /usr/local/bin/chatlogger-server

EXPOSE 8080

# USER chatlogger:notso

ENTRYPOINT [ "chatlogger-server" ]
