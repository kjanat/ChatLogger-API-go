# Build Stage
FROM --platform=$BUILDPLATFORM golang:1.24.2 AS builder

ARG TARGETOS
ARG TARGETARCH
ARG LD_FLAGS

LABEL org.opencontainers.image.source="https://github.com/kjanat/chatlogger-api-go"
LABEL org.opencontainers.image.description="ChatLogger API Worker"
LABEL org.opencontainers.image.licenses="MIT"

WORKDIR /src

# Copy all files to ensure we have dependencies
COPY go.mod go.sum ./
COPY cmd/worker ./cmd/worker
COPY docs/ ./docs
COPY internal/ ./internal

# If 32-bit architecture, change the version of gorm.io/gorm to v1.25.12
RUN ARCH=$(uname -m) && \
if [ "$ARCH" = "i686" ] || [ "$ARCH" = "armv7l" ] || [ "$ARCH" = "armv6l" ]; then \
	echo "32-bit architecture detected ($ARCH), changing gorm version to v1.25.12"; \
	go mod edit -replace=gorm.io/gorm=gorm.io/gorm@v1.25.12; \
else \
	echo "Not a 32-bit architecture ($ARCH), using default gorm version"; \
fi

# Install dependencies
RUN go mod tidy

# Build the worker binary for linux
RUN GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build \
-ldflags="${LD_FLAGS}" \
-o /out/worker \
./cmd/worker

# Final Stage
FROM alpine:3.21.3

WORKDIR /app
ENV GIN_MODE=release

# Create a non-root user and group
RUN addgroup -S chatlogger && adduser -S -G chatlogger chatlogger

COPY --from=builder /out/worker /usr/local/bin/chatlogger-worker

# Create exports directory and set appropriate permissions
RUN mkdir -p /app/exports && \
    chown -R chatlogger:chatlogger /app && \
    chmod -R 755 /usr/local/bin/chatlogger-worker

# Use non-root user for running the application
USER chatlogger

ENTRYPOINT [ "chatlogger-worker" ]
