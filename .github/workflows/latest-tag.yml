name: Push latest tag

on:
  push:
    branches:
      - master
      - development
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_run:
    workflows:
      - CI
      - Version Management
    types:
      - completed

permissions:
  contents: write

jobs:
  update-latest-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Update latest tag
        run: |
          git config user.email "${{ secrets.ACTIONS_EMAIL }}"
          git config user.name "${{ secrets.ACTIONS_USERNAME }}"
          git config user.signingkey "${{ steps.import_gpg.outputs.fingerprint }}"
          git config commit.gpgsign true
          git config tag.gpgsign true

          # Get the current commit hash
          COMMIT_HASH=$(git rev-parse HEAD)

          # Check if the latest tag exists
          if git rev-parse "latest" >/dev/null 2>&1; then
            # Delete the existing tag locally and remotely
            git tag -d latest
            git push --delete origin latest || true
          fi

          # Create and push the new latest tag pointing to the current commit
          git tag -s latest -m "Latest stable version"
          git push origin latest

          echo "Updated 'latest' tag to point to commit $COMMIT_HASH"
