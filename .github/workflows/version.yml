name: Version Management

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
  push:
    branches:
      - master
      - development
    paths-ignore:
      - '**.md'
      - 'docs/**'

# Define minimum permissions needed for the workflow
permissions:
  contents: write  # Needed for pushing version updates and creating tags

jobs:
  bump-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Execute version script
        run: |
          ./scripts/version.sh ${{ github.event.inputs.version_type }}

      - name: Commit and push changes
        run: |
          new_version=$(grep -oP 'Version = "\K[^"]+' internal/version/version.go)
          git config user.email "${{ secrets.ACTIONS_EMAIL }}"
          git config user.name "${{ secrets.ACTIONS_USERNAME }}"
          git config user.signingkey "${{ steps.import_gpg.outputs.fingerprint }}"
          git config commit.gpgsign true
          git config tag.gpgsign true
          git add internal/version/version.go
          git commit -S -m "Bump version to $new_version"
          git push
          echo "Version bumped to $new_version"

      - name: Create and push tag
        run: |
          VERSION=$(grep -oP 'Version = "\K[^"]+' internal/version/version.go)
          git tag -s "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"
          echo "Created and pushed tag v$VERSION"

  update-latest-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Update latest tag
        run: |
          git config user.email "${{ secrets.ACTIONS_EMAIL }}"
          git config user.name "${{ secrets.ACTIONS_USERNAME }}"
          git config user.signingkey "${{ steps.import_gpg.outputs.fingerprint }}"
          git config commit.gpgsign true
          git config tag.gpgsign true

          # Get the current commit hash
          COMMIT_HASH=$(git rev-parse HEAD)

          # Check if the latest tag exists
          if git rev-parse "latest" >/dev/null 2>&1; then
            # Delete the existing tag locally and remotely
            git tag -d latest
            git push --delete origin latest || true
          fi

          # Create and push the new latest tag pointing to the current commit
          git tag -s latest -m "Latest stable version"
          git push origin latest

          echo "Updated 'latest' tag to point to commit $COMMIT_HASH"
