name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_run:
    workflows:
      - Version Management
    types:
      - completed

# Explicitly define permissions needed for release actions
permissions:
  contents: write  # Needed for creating releases
  packages: write  # Needed for pushing to GitHub Container Registry
  id-token: write  # Needed for Cosign signing

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - run: go mod tidy

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        if: success()
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean --verbose --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_PWD: ${{ secrets.COSIGN_PASSWORD }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          DESCRIPTION: ${{ github.event.repository.description }}
          URL: ${{ github.event.repository.url }}

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: ChatLogger-API
          path: dist/*
