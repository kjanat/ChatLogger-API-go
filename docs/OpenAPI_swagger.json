{"swagger":"2.0","info":{"description":"API for logging and managing chat sessions.","title":"ChatLogger API (Go)","termsOfService":"https://github.com/kjanat/chatlogger-api-go#terms-of-service","contact":{"name":"ChatLogger","url":"https://github.com/kjanat/chatlogger-api-go/issues","email":"chatlogger-api-go+swagger@kjanat.com"},"license":{"name":"MIT License","url":"https://github.com/kjanat/chatlogger-api-go/blob/master/LICENSE"}},"paths":{"/api/v1/analytics/messages":{"get":{"security":[{"BearerAuth":[]}],"description":"Retrieves aggregated statistics about messages within a specified date range for the user's organization.","produces":["application/json"],"tags":["Analytics"],"summary":"Get Message Statistics","parameters":[{"type":"string","description":"Start date (RFC3339 format, e.g., 2023-01-01T00:00:00Z). Defaults to 30 days ago.","name":"start","in":"query"},{"type":"string","description":"End date (RFC3339 format, e.g., 2023-01-31T23:59:59Z). Defaults to now.","name":"end","in":"query"}],"responses":{"200":{"description":"Aggregated message statistics","schema":{"type":"object","additionalProperties":true}},"400":{"description":"Invalid date format","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to get message statistics","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/chats":{"get":{"security":[{"BearerAuth":[]}],"description":"Retrieves a paginated list of chat sessions for the user's organization.","produces":["application/json"],"tags":["Chats"],"summary":"List Chats","parameters":[{"type":"integer","default":20,"description":"Number of chats per page","name":"limit","in":"query"},{"type":"integer","default":0,"description":"Offset for pagination","name":"offset","in":"query"}],"responses":{"200":{"description":"List of chats","schema":{"type":"array","items":{"$ref":"#/definitions/domain.Chat"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to list chats","schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"post":{"security":[{"ApiKeyAuth":[],"BearerAuth":[]}],"description":"Creates a new chat session for the organization. Can be called via Dashboard (JWT) or Public API (API Key).","consumes":["application/json"],"produces":["application/json"],"tags":["Chats"],"summary":"Create Chat","parameters":[{"description":"Chat Details","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.CreateChatRequest"}}],"responses":{"201":{"description":"message: Chat created successfully, chat_id: uint64","schema":{"type":"object","additionalProperties":true}},"400":{"description":"Invalid request data","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT or API Key invalid/missing, or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Forbidden (API Key doesn't match slug)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to create chat or process tags/metadata","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/chats/{chatID}":{"get":{"security":[{"BearerAuth":[]}],"description":"Retrieves details for a specific chat session, optionally including messages.","produces":["application/json"],"tags":["Chats"],"summary":"Get Chat by ID","parameters":[{"type":"integer","description":"Chat ID","name":"chatID","in":"path","required":true},{"type":"boolean","default":false,"description":"Include messages in the response","name":"include_messages","in":"query"}],"responses":{"200":{"description":"Chat details","schema":{"$ref":"#/definitions/handler.GetChatResponse"}},"400":{"description":"Invalid chat ID","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Permission denied (Chat doesn't belong to user's org)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"Chat not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to get chat or messages","schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"delete":{"security":[{"BearerAuth":[]}],"description":"Deletes a chat session and its associated messages.","produces":["application/json"],"tags":["Chats"],"summary":"Delete Chat","parameters":[{"type":"integer","description":"Chat ID","name":"chatID","in":"path","required":true}],"responses":{"200":{"description":"Chat deleted successfully","schema":{"type":"object","additionalProperties":{"type":"string"}}},"400":{"description":"Invalid chat ID","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Permission denied (Chat doesn't belong to user's org)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"Chat not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to get or delete chat","schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"patch":{"security":[{"BearerAuth":[]}],"description":"Updates the title, tags, or metadata of an existing chat session.","consumes":["application/json"],"produces":["application/json"],"tags":["Chats"],"summary":"Update Chat","parameters":[{"type":"integer","description":"Chat ID","name":"chatID","in":"path","required":true},{"description":"Fields to update","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.UpdateChatRequest"}}],"responses":{"200":{"description":"Updated chat details","schema":{"$ref":"#/definitions/handler.GetChatResponse"}},"400":{"description":"Invalid chat ID or request data","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Permission denied (Chat doesn't belong to user's org)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"Chat not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to get or update chat, or process tags/metadata","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/chats/{chatID}/messages":{"get":{"security":[{"BearerAuth":[]}],"description":"Retrieves all messages associated with a specific chat session.","produces":["application/json"],"tags":["Messages"],"summary":"Get Chat Messages","parameters":[{"type":"integer","description":"Chat ID","name":"chatID","in":"path","required":true}],"responses":{"200":{"description":"List of messages with parsed metadata","schema":{"type":"array","items":{"$ref":"#/definitions/handler.GetMessageResponse"}}},"400":{"description":"Invalid chat ID","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Permission denied (Chat doesn't belong to user's org)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"Chat not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to get chat or messages","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/exports":{"get":{"security":[{"BearerAuth":[]}],"description":"Retrieves a paginated list of asynchronous export jobs for the user's organization.","produces":["application/json"],"tags":["Exports"],"summary":"List Export Jobs","parameters":[{"type":"integer","default":10,"description":"Number of exports per page","name":"limit","in":"query"},{"type":"integer","default":0,"description":"Offset for pagination","name":"offset","in":"query"}],"responses":{"200":{"description":"List of export jobs","schema":{"type":"array","items":{"$ref":"#/definitions/domain.Export"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to fetch exports","schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"post":{"security":[{"BearerAuth":[]}],"description":"Initiates an asynchronous job to export chat data (chats, messages, or all) in JSON or CSV format for the user's organization.","consumes":["application/json"],"produces":["application/json"],"tags":["Exports"],"summary":"Create Asynchronous Export Job","parameters":[{"description":"Export parameters (format, type)","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.ExportRequest"}}],"responses":{"202":{"description":"export_id: uint64, status: domain.ExportStatus, message: string","schema":{"type":"object","additionalProperties":true}},"400":{"description":"Invalid request data (format/type)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing, Org or User ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to create export job","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/exports/sync":{"post":{"security":[{"BearerAuth":[]}],"description":"Immediately generates and returns an export file (JSON or CSV) containing chat data. Use async export for large datasets.","consumes":["application/json"],"produces":["application/octet-stream"],"tags":["Exports (Legacy)"],"summary":"Create Synchronous Export (Legacy)","parameters":[{"description":"Export parameters (format, type)","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.ExportRequest"}}],"responses":{"200":{"description":"Export file (JSON or CSV)","schema":{"type":"file"}},"400":{"description":"Invalid request data (format/type)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to retrieve data or generate export","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/exports/{id}":{"get":{"security":[{"BearerAuth":[]}],"description":"Retrieves the status and details of a specific asynchronous export job.","produces":["application/json"],"tags":["Exports"],"summary":"Get Export Job Status","parameters":[{"type":"integer","description":"Export Job ID","name":"id","in":"path","required":true}],"responses":{"200":{"description":"Export job details","schema":{"$ref":"#/definitions/domain.Export"}},"400":{"description":"Invalid export ID","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"Export not found or doesn't belong to user's org","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/exports/{id}/download":{"get":{"security":[{"BearerAuth":[]}],"description":"Downloads the file generated by a completed asynchronous export job.","produces":["application/octet-stream"],"tags":["Exports"],"summary":"Download Export File","parameters":[{"type":"integer","description":"Export Job ID","name":"id","in":"path","required":true}],"responses":{"200":{"description":"Export file (JSON or CSV)","schema":{"type":"file"}},"400":{"description":"Invalid export ID or export not ready","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"Export not found or doesn't belong to user's org","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Export file path not found or file missing on disk","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/orgs/me/apikeys":{"get":{"security":[{"BearerAuth":[]}],"description":"Lists all API keys for the organization associated with the authenticated user.","produces":["application/json"],"tags":["API Keys (Admin)"],"summary":"List API Keys","responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/domain.APIKey"}}},"401":{"description":"Unauthorized or Org ID not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to list API keys","schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"post":{"security":[{"BearerAuth":[]}],"description":"Generates a new API key for the organization associated with the authenticated user.","consumes":["application/json"],"produces":["application/json"],"tags":["API Keys (Admin)"],"summary":"Generate API Key","parameters":[{"description":"API Key Label","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.GenerateKeyRequest"}}],"responses":{"201":{"description":"API key generated successfully","schema":{"type":"object","additionalProperties":{"type":"string"}}},"400":{"description":"Invalid request data","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized or Org ID not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to generate API key","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/orgs/me/apikeys/{id}":{"delete":{"security":[{"BearerAuth":[]}],"description":"Revokes an existing API key by its ID.","produces":["application/json"],"tags":["API Keys (Admin)"],"summary":"Revoke API Key","parameters":[{"type":"integer","description":"API Key ID","name":"id","in":"path","required":true}],"responses":{"200":{"description":"API key revoked successfully","schema":{"type":"object","additionalProperties":{"type":"string"}}},"400":{"description":"Invalid API key ID","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized or Org ID not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Permission denied","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"API key not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to revoke API key","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/orgs/me/apikeys/{id}/delete":{"delete":{"security":[{"BearerAuth":[]}],"description":"Deletes an API key permanently. Use RevokeKey for standard deactivation.","produces":["application/json"],"tags":["API Keys (Admin)"],"summary":"Delete API Key (Not typically exposed, Revoke is preferred)","parameters":[{"type":"integer","description":"API Key ID","name":"id","in":"path","required":true}],"responses":{"200":{"description":"API key deleted successfully","schema":{"type":"object","additionalProperties":{"type":"string"}}},"400":{"description":"Invalid API key ID","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized or Org ID not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Permission denied","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"API key not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to delete API key","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/orgs/me/users":{"get":{"security":[{"BearerAuth":[]}],"description":"Retrieves a paginated list of all users belonging to the authenticated user's organization. Requires admin role.","produces":["application/json"],"tags":["Users (Admin)"],"summary":"List Organization Users (Admin)","parameters":[{"type":"integer","default":20,"description":"Number of users per page","name":"limit","in":"query"},{"type":"integer","default":0,"description":"Offset for pagination","name":"offset","in":"query"}],"responses":{"200":{"description":"List of users in the organization","schema":{"type":"array","items":{"$ref":"#/definitions/domain.User"}}},"401":{"description":"Unauthorized (JWT invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Forbidden (User does not have admin role)\"\t//\tAssuming\tRoleRequired\tmiddleware\thandles\tthis","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to get users","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/orgs/{slug}/chats":{"post":{"security":[{"ApiKeyAuth":[],"BearerAuth":[]}],"description":"Creates a new chat session for the organization. Can be called via Dashboard (JWT) or Public API (API Key).","consumes":["application/json"],"produces":["application/json"],"tags":["Chats"],"summary":"Create Chat","parameters":[{"description":"Chat Details","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.CreateChatRequest"}},{"type":"string","description":"Organization Slug (Required for Public API)","name":"slug","in":"path"}],"responses":{"201":{"description":"message: Chat created successfully, chat_id: uint64","schema":{"type":"object","additionalProperties":true}},"400":{"description":"Invalid request data","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT or API Key invalid/missing, or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Forbidden (API Key doesn't match slug)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to create chat or process tags/metadata","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/orgs/{slug}/chats/{chatID}/messages":{"post":{"security":[{"ApiKeyAuth":[]}],"description":"Adds a new message to an existing chat session. Can be called via Public API (API Key).","consumes":["application/json"],"produces":["application/json"],"tags":["Messages"],"summary":"Create Message","parameters":[{"type":"string","description":"Organization Slug","name":"slug","in":"path","required":true},{"type":"integer","description":"Chat ID","name":"chatID","in":"path","required":true},{"description":"Message Details (role, content, metadata)","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.CreateMessageRequest"}}],"responses":{"201":{"description":"message: Message created successfully, message_id: uint64","schema":{"type":"object","additionalProperties":true}},"400":{"description":"Invalid chat ID or request data (role, content, metadata validation)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (API Key invalid/missing or Org ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"403":{"description":"Forbidden (API Key doesn't match slug or chat doesn't belong to org)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"Chat not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to get chat or create message","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/users/me":{"get":{"security":[{"BearerAuth":[]}],"description":"Retrieves the profile information for the currently authenticated user.","produces":["application/json"],"tags":["Users"],"summary":"Get Current User","responses":{"200":{"description":"Current user's profile","schema":{"$ref":"#/definitions/domain.User"}},"401":{"description":"Unauthorized (JWT invalid/missing or User ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"User not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to get user","schema":{"type":"object","additionalProperties":{"type":"string"}}}}},"patch":{"security":[{"BearerAuth":[]}],"description":"Updates the first name and last name for the currently authenticated user.","consumes":["application/json"],"produces":["application/json"],"tags":["Users"],"summary":"Update Current User","parameters":[{"description":"User fields to update","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.UpdateMeRequest"}}],"responses":{"200":{"description":"Updated user profile","schema":{"$ref":"#/definitions/domain.User"}},"400":{"description":"Invalid request data","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or User ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"404":{"description":"User not found","schema":{"type":"object","additionalProperties":{"type":"string"}}},"500":{"description":"Failed to get or update user","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/api/v1/users/me/password":{"post":{"security":[{"BearerAuth":[]}],"description":"Allows the currently authenticated user to change their password.","consumes":["application/json"],"produces":["application/json"],"tags":["Users"],"summary":"Change Password","parameters":[{"description":"Current and new password","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.ChangePasswordRequest"}}],"responses":{"200":{"description":"Password changed successfully","schema":{"type":"object","additionalProperties":{"type":"string"}}},"400":{"description":"Invalid request data or password change failed (e.g., wrong current password)","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Unauthorized (JWT invalid/missing or User ID not found)","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/auth/login":{"post":{"description":"Authenticates a user with email and password, returns user info and sets an HTTP-only auth cookie.","consumes":["application/json"],"produces":["application/json"],"tags":["Authentication"],"summary":"User Login","parameters":[{"description":"Login Credentials","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.LoginRequest"}}],"responses":{"200":{"description":"message: Login successful, user: domain.User","schema":{"type":"object","additionalProperties":true}},"400":{"description":"Invalid request data","schema":{"type":"object","additionalProperties":{"type":"string"}}},"401":{"description":"Invalid email or password","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/auth/logout":{"post":{"description":"Logs out the current user by clearing the authentication cookie.","produces":["application/json"],"tags":["Authentication"],"summary":"User Logout","responses":{"200":{"description":"Logout successful","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}},"/auth/register":{"post":{"description":"Registers a new user. In a real app, this might require admin privileges or an invitation system.","consumes":["application/json"],"produces":["application/json"],"tags":["Authentication"],"summary":"User Registration","parameters":[{"description":"User Registration Details","name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/handler.RegisterRequest"}}],"responses":{"201":{"description":"message: User registered successfully, user_id: uint64","schema":{"type":"object","additionalProperties":true}},"400":{"description":"Invalid request data or registration failed (e.g., email exists)","schema":{"type":"object","additionalProperties":{"type":"string"}}}}}}},"definitions":{"domain.APIKey":{"type":"object","required":["created_at","id","label","organization_id","revoked_at"],"properties":{"created_at":{"type":"string"},"id":{"type":"integer"},"label":{"type":"string"},"organization_id":{"type":"integer"},"revoked_at":{"type":"string"}}},"domain.Chat":{"type":"object","required":["created_at","id","messages","metadata","organization_id","tags","title","updated_at","user_id"],"properties":{"created_at":{"type":"string"},"id":{"type":"integer"},"messages":{"type":"array","items":{"$ref":"#/definitions/domain.Message"}},"metadata":{"description":"Store ChatMetadata as JSON string","type":"string"},"organization_id":{"type":"integer"},"tags":{"description":"JSON array of tags as string","type":"string"},"title":{"type":"string"},"updated_at":{"type":"string"},"user_id":{"description":"Nullable for anonymous chats","type":"integer"}}},"domain.ChatMetadata":{"type":"object","required":["avg_response_time","country_code","ip_address","is_escalated","is_forwarded_to_hr","language_code","question_category","sentiment","session_id","token_count","transcript_link","user_rating"],"properties":{"avg_response_time":{"description":"In seconds","type":"number"},"country_code":{"description":"ISO-3166 country code (e.g., \"NL\")","type":"string"},"ip_address":{"type":"string"},"is_escalated":{"type":"boolean"},"is_forwarded_to_hr":{"type":"boolean"},"language_code":{"description":"ISO-639 language code (e.g., \"tr\")","type":"string"},"question_category":{"type":"string"},"sentiment":{"type":"string"},"session_id":{"type":"string"},"token_count":{"description":"Total tokens for the chat session","type":"integer"},"transcript_link":{"type":"string"},"user_rating":{"description":"Optional user rating","type":"integer"}}},"domain.Export":{"type":"object","required":["completed_at","created_at","error","file_path","format","id","organization_id","status","type","updated_at","user_id"],"properties":{"completed_at":{"type":"string"},"created_at":{"type":"string"},"error":{"type":"string"},"file_path":{"type":"string"},"format":{"$ref":"#/definitions/domain.ExportFormat"},"id":{"type":"integer"},"organization_id":{"type":"integer"},"status":{"$ref":"#/definitions/domain.ExportStatus"},"type":{"$ref":"#/definitions/domain.ExportType"},"updated_at":{"type":"string"},"user_id":{"type":"integer"}}},"domain.ExportFormat":{"type":"string","enum":["json","csv"],"x-enum-varnames":["ExportFormatJSON","ExportFormatCSV"]},"domain.ExportStatus":{"type":"string","enum":["pending","processing","completed","failed"],"x-enum-varnames":["ExportStatusPending","ExportStatusProcessing","ExportStatusCompleted","ExportStatusFailed"]},"domain.ExportType":{"type":"string","enum":["chats","messages","all"],"x-enum-varnames":["ExportTypeChats","ExportTypeMessages","ExportTypeAll"]},"domain.Message":{"type":"object","required":["chat_id","content","created_at","id","metadata","role"],"properties":{"chat_id":{"type":"integer"},"content":{"type":"string"},"created_at":{"type":"string"},"id":{"type":"integer"},"metadata":{"description":"Store MessageMetadata as JSON string","type":"string"},"role":{"$ref":"#/definitions/domain.MessageRole"}}},"domain.MessageMetadata":{"type":"object","required":["response_time","token_count"],"properties":{"response_time":{"description":"In milliseconds","type":"number"},"token_count":{"type":"integer"}}},"domain.MessageRole":{"type":"string","enum":["user","assistant","system"],"x-enum-varnames":["MessageRoleUser","MessageRoleAssistant","MessageRoleSystem"]},"domain.Role":{"type":"string","enum":["superadmin","admin","user","viewer"],"x-enum-comments":{"RoleAdmin":"Can manage own org","RoleSuperAdmin":"Can manage all orgs","RoleUser":"Regular user","RoleViewer":"Read-only user"},"x-enum-varnames":["RoleSuperAdmin","RoleAdmin","RoleUser","RoleViewer"]},"domain.User":{"type":"object","required":["created_at","email","first_name","id","last_login_at","last_name","organization_id","role","updated_at"],"properties":{"created_at":{"type":"string"},"email":{"type":"string"},"first_name":{"type":"string"},"id":{"type":"integer"},"last_login_at":{"type":"string"},"last_name":{"type":"string"},"organization_id":{"type":"integer"},"role":{"$ref":"#/definitions/domain.Role"},"updated_at":{"type":"string"}}},"handler.ChangePasswordRequest":{"type":"object","required":["current_password","new_password"],"properties":{"current_password":{"type":"string"},"new_password":{"type":"string","minLength":8}}},"handler.CreateChatRequest":{"type":"object","required":["metadata","tags","title","user_id"],"properties":{"metadata":{"description":"Use the structured type","allOf":[{"$ref":"#/definitions/domain.ChatMetadata"}]},"tags":{"type":"array","items":{"type":"string"}},"title":{"type":"string"},"user_id":{"description":"Optional, for anonymous chats","type":"integer"}}},"handler.CreateMessageRequest":{"type":"object","required":["content","metadata","role"],"properties":{"content":{"type":"string"},"metadata":{"description":"Use structured type","allOf":[{"$ref":"#/definitions/domain.MessageMetadata"}]},"role":{"$ref":"#/definitions/domain.MessageRole"}}},"handler.ExportRequest":{"type":"object","required":["format","type"],"properties":{"format":{"type":"string","enum":["json","csv"]},"type":{"type":"string","enum":["chats","messages","all"]}}},"handler.GenerateKeyRequest":{"type":"object","required":["label"],"properties":{"label":{"type":"string"}}},"handler.GetChatResponse":{"type":"object","required":["created_at","id","messages","metadata","metadata","organization_id","tags","tags","title","updated_at","user_id"],"properties":{"created_at":{"type":"string"},"id":{"type":"integer"},"messages":{"type":"array","items":{"$ref":"#/definitions/domain.Message"}},"metadata":{"description":"Parsed metadata","allOf":[{"$ref":"#/definitions/domain.ChatMetadata"}]},"organization_id":{"type":"integer"},"tags":{"description":"Parsed tags","type":"array","items":{"type":"string"}},"title":{"type":"string"},"updated_at":{"type":"string"},"user_id":{"description":"Nullable for anonymous chats","type":"integer"}}},"handler.GetMessageResponse":{"type":"object","required":["chat_id","content","created_at","id","metadata","metadata","role"],"properties":{"chat_id":{"type":"integer"},"content":{"type":"string"},"created_at":{"type":"string"},"id":{"type":"integer"},"metadata":{"description":"Parsed metadata","allOf":[{"$ref":"#/definitions/domain.MessageMetadata"}]},"role":{"$ref":"#/definitions/domain.MessageRole"}}},"handler.LoginRequest":{"type":"object","required":["email","password"],"properties":{"email":{"type":"string"},"password":{"type":"string"}}},"handler.RegisterRequest":{"type":"object","required":["email","first_name","last_name","organization_id","password","role"],"properties":{"email":{"type":"string"},"first_name":{"type":"string"},"last_name":{"type":"string"},"organization_id":{"description":"Made optional, otherwise: `binding:\"required\"`","type":"integer"},"password":{"type":"string","minLength":8},"role":{"$ref":"#/definitions/domain.Role"}}},"handler.UpdateChatRequest":{"type":"object","required":["metadata","tags","title"],"properties":{"metadata":{"description":"Use the structured type","allOf":[{"$ref":"#/definitions/domain.ChatMetadata"}]},"tags":{"type":"array","items":{"type":"string"}},"title":{"type":"string"}}},"handler.UpdateMeRequest":{"type":"object","required":["first_name","last_name"],"properties":{"first_name":{"type":"string"},"last_name":{"type":"string"}}}},"securityDefinitions":{"ApiKeyAuth":{"type":"apiKey","name":"x-organization-api-key","in":"header"},"BearerAuth":{"description":"Type \"Bearer\" followed by a space and JWT token.","type":"apiKey","name":"Authorization","in":"header"}},"externalDocs":{"description":"GitHub Wiki","url":"https://github.com/kjanat/chatlogger-api-go/wiki"}}