services:
  # Server component - handles API requests
  server:
    image: ghcr.io/kjanat/chatlogger-api-server:${VERSION:-latest}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://dbuser:dbpassword@db:5432/chatlogger
      - REDIS_ADDR=redis:6379
      - HOST=0.0.0.0
      - PORT=8080
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-replace-in-production}
      - EXPORT_DIR=/app/exports
    restart: unless-stopped
    volumes:
      - ./migrations:/app/migrations
      - cl_exports_data:/app/exports
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  # Worker component - handles background jobs
  worker:
    image: ghcr.io/kjanat/chatlogger-api-worker${VERSION:-latest}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://dbuser:dbpassword@db:5432/chatlogger
      - REDIS_ADDR=redis:6379
      - EXPORT_DIR=/app/exports
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-replace-in-production}
    restart: unless-stopped
    volumes:
      - cl_exports_data:/app/exports
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "chatlogger-worker"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Redis for job queue
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - cl_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Database service
  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=dbpassword
      - POSTGRES_DB=chatlogger
    volumes:
      - cl_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  cl_postgres_data:
  cl_redis_data:
  cl_exports_data:
